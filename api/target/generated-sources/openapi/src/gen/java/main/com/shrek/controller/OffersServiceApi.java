/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.0.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.shrek.controller;

import com.shrek.model.CustomizedException;
import com.shrek.model.LoanApplicationRequestDTO;
import com.shrek.model.LoanOfferDTO;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-01-12T14:01:51.506279800+03:00[Europe/Moscow]")
@Validated
@Tag(name = "OffersService", description = "The LoanOfferVariations calculation")
public interface OffersServiceApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /conveyor/offers : The LoanOfferVariations calculation
     *
     * @param loanApplicationRequestDTO  (required)
     * @return Ok. Successful offer response (status code 200)
     *         or Error 400 Bad request (status code 400)
     *         or Refuse loan request (status code 200)
     */
    @Operation(
        operationId = "constructListOfPossibleLoanOffers",
        summary = "The LoanOfferVariations calculation",
        tags = { "OffersService" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Ok. Successful offer response", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = LoanOfferDTO.class))
            }),
            @ApiResponse(responseCode = "400", description = "Error 400 Bad request"),
            @ApiResponse(responseCode = "200", description = "Refuse loan request", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CustomizedException.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/conveyor/offers",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<List<LoanOfferDTO>> constructListOfPossibleLoanOffers(
        @Parameter(name = "LoanApplicationRequestDTO", description = "", required = true) @Valid @RequestBody LoanApplicationRequestDTO loanApplicationRequestDTO
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"totalAmount\" : 1.4658129805029452, \"isSalaryClient\" : true, \"monthlyPayment\" : 5.637376656633329, \"rate\" : 2.3021358869347655, \"requestedAmount\" : 6.027456183070403, \"term\" : 5, \"applicationId\" : 0, \"isInsuranceEnabled\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
